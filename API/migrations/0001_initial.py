# Generated by Django 5.0.7 on 2024-08-15 00:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='awards_images/')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='news_images/')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('subscribed_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StreamingPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.CharField(choices=[('TV_SHOW', 'Tv Show'), ('MOVIE', 'Movie')], max_length=30, null=True)),
                ('cast', models.CharField(max_length=255)),
                ('director', models.CharField(max_length=255)),
                ('plot', models.TextField(blank=True, null=True)),
                ('acting', models.TextField(blank=True, null=True)),
                ('characters', models.TextField(blank=True, null=True)),
                ('storytelling', models.TextField(blank=True, null=True)),
                ('verdict', models.TextField(blank=True, null=True)),
                ('thumbnail', models.ImageField(upload_to='thumbnails/')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('ratings', models.DecimalField(decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('genre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='API.genre')),
                ('industry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='API.industry')),
                ('streaming_platform', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='API.streamingplatform')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('brief_description', models.TextField()),
                ('director', models.CharField(max_length=255)),
                ('producer', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('thumbnail', models.ImageField(null=True, upload_to='thumbnails/')),
                ('cast', models.TextField()),
                ('content', models.CharField(choices=[('TV_SHOW', 'Tv Show'), ('MOVIE', 'Movie')], max_length=30, null=True)),
                ('category', models.CharField(choices=[('BEST SERIES OF 2024', 'Best Series of 2024'), ('BINGE-WORTHY SERIES', 'Binge-worthy Series'), ('MOST POPULAR NOLLYWOOD SERIES', 'Most Popular Nollywood Series'), ('MOST POPULAR HOLLYWOOD SERIES', 'Most Popular Hollywood Series'), ('MOST POPULAR SERIES IN NIGERIA 2024', 'Most Popular Series in Nigeria 2024'), ('TOP RATED SERIES', 'Top Rated Series'), ('TOP ON SERIES NETFLIX', 'Top Series on Netflix'), ('TOP ON SERIES PRIME', 'Top Series on Prime'), ('TOP ON SERIES SHOWMAX', 'Top Series on Showmax')], max_length=100, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.genre')),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.industry')),
                ('streaming_platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='API.streamingplatform')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_address', models.EmailField(blank=True, max_length=255, unique=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('MALE', 'male'), ('FEMALE', 'female')], default='FEMALE', max_length=13)),
                ('country', models.CharField(blank=True, max_length=255)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('liked_awards', models.ManyToManyField(blank=True, related_name='users_who_liked', to='API.award')),
                ('liked_new', models.ManyToManyField(blank=True, related_name='users_who_liked', to='API.news')),
                ('liked_reviews', models.ManyToManyField(blank=True, related_name='users_who_liked', to='API.review')),
                ('saved_awards', models.ManyToManyField(blank=True, related_name='users_who_saved', to='API.award')),
                ('saved_new', models.ManyToManyField(blank=True, related_name='users_who_saved', to='API.news')),
                ('saved_reviews', models.ManyToManyField(blank=True, related_name='users_who_saved', to='API.review')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='review',
            name='liked_by_users',
            field=models.ManyToManyField(blank=True, related_name='liked_reviews_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='saved_by_users',
            field=models.ManyToManyField(blank=True, related_name='saved_reviews_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='news',
            name='liked_by_users',
            field=models.ManyToManyField(blank=True, related_name='liked_news_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='news',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='news',
            name='saved_by_users',
            field=models.ManyToManyField(blank=True, related_name='saved_news_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.PositiveIntegerField()),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='award',
            name='liked_by_users',
            field=models.ManyToManyField(blank=True, related_name='liked_awards_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='award',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='award',
            name='saved_by_users',
            field=models.ManyToManyField(blank=True, related_name='saved_awards_items', to=settings.AUTH_USER_MODEL),
        ),
    ]
